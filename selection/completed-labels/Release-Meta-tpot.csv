Id,FileName,v0.1.3,v0.6,v0.10.1,v0.11.5,0.11.6.post3,v0.11.7,,comments,total-assert,assertions,test type,test,components,methods,subcomponents
13,tests/tpot_tests.py,,,tests/tpot_tests.py,tests/tpot_tests.py,tests/tpot_tests.py,tests/tpot_tests.py,,"This file contains all the test for machine learning pipeline, please pay attention when summerising. The test also include testing for memory usage, recommend summerize dirrectly looking at the source file",372,"113:assertEqual, 3:assertGreater, 32:assert_raises, 4:assert_not_equal, 10:assert_equal, 20:allclose, 13:assert_in, 22:assert isinstance, ",,,Tpot Pipeline,120,"init_custom_parameters (Assert that the TPOT instantiator stores the TPOT variables properly), init_log_file(Assert that TPOT has right file handler to save progress), init_log_file_2(Assert that TPOT has right file handler to save progress via string input), init_default_scoring(Assert that TPOT intitializes with the correct default scoring function), init_default_scoring_2..7, invalid_score_warning, invalid_dataset_warning, invalid_subsample_ratio_warning, invalid_mut_rate_plus_xo_rate, init_max_time_mins, init_max_time_mins_and_generations, init_n_jobs, init_n_jobs_2, init_n_jobs_3, test_timeout, custom_cv_test_generator, invalid_pipeline, balanced_accuracy, get_params, set_params, set_params_2, TPOTBase, conf_dict, conf_dict_2, conf_dict_3, read_config_file, read_config_file_2, read_config_file_3, random_ind, random_ind_2, score, score_2, score_3, sample_weight_func, template_1..5, fit_GroupKFold, predict, predict_proba, warm_start, test_fit, fit_cuml, test_memory, check_periodic_pipeline, save_periodic_pipeline, fit_predict, update_top_pipeline, summary_of_best_pipeline, evaluated_individuals_, stop_by_max_time_mins, update_evaluated_individuals_, evaluate_individuals, update_pbar, update_val, preprocess_individuals, init_pretest, check_dataset, imputer, sparse_matrix, source_decode, tpot_operator_factory_class, PolynomialFeatures_exception, pick_two_individuals_eligible_for_crossover, pick_two_individuals_eligible_for_crossover_bad, mate_operator, cxOnePoint, mutNodeReplacement, mutNodeReplacement_2, test_varOr, test_operator_type, test_gen, test_clean_pipeline_string,  "
51,ci/.travis_test.sh,ci/.travis_test.sh,ci/.travis_test.sh,ci/.travis_test.sh,ci/.travis_test.sh,ci/.travis_test.sh,ci/.travis_test.sh,,,,,,,,,
2148,tests/test_config.py,,,tests/test_config.py,tests/test_config.py,tests/test_config.py,tests/test_config.py,,,,,This file is part of the TPOT library,,Test config file,,"sklearn.naive_bayes.GaussianNB, sklearn.naive_bayes.BernoulliNB, sklearn.naive_bayes.MultinomialNB"
2252,tests/driver_tests.py,,,tests/driver_tests.py,tests/driver_tests.py,tests/driver_tests.py,tests/driver_tests.py,,,82,"9:assert_raises, 29:assertEqual, 4:assertGreater","error-handling/ unsupported input, input it out of range, Assert that the TPOT driver outputs normal result in mode mode, Assert that the tpot_driver() in TPOT driver outputs normal result with verbosity = 1.,Assert that the tpot_driver() in TPOT driver outputs normal result with verbosity = 2, Assert that the tpot_driver() in TPOT driver outputs normal result with verbosity = 3, Assert that the tpot_driver() in TPOT driver outputs normal result with exported python file and verbosity = 0, Assert that _read_data_file raises ValueError when the targe column is missing, Assert that the TPOT driver stores correct default values for all parameters, Assert that _print_args prints correct values for all parameters in default settings, Assert that _print_args prints correct values for all parameters in regression mode, Assert that the TPOT CLI interface's integer parsing throws an exception when n < 0, Assert that the TPOT CLI interface's integer parsing returns the integer value of a string encoded integer when n > 0, Assert that the TPOT CLI interface's integer parsing throws an exception when n is not an integer, Assert that the TPOT CLI interface's positive_integer_or_none parsing throws an exception when n < 0, Assert that the TPOT CLI interface's positive_integer_or_none parsing returns the integer value of a string encoded integer when n > 0, Assert that the TPOT CLI interface's positive_integer_or_none parsing return None when value is string 'None' or 'none', Assert that the TPOT CLI interface's float range returns a float with input is in 0. - 1.0, Assert that the TPOT CLI interface's float range throws an exception when input is not a float, ",,Driver,20,"scoring_function_argument, test_driver, test_driver_2, test_driver_3, test_driver_4, test_driver_5, test_read_data_file, ParserTest (test_default_param, test_print_args, test_print_args_2, test_positive_integer, test_positive_integer_2, test_positive_integer_3, test_positive_integer_or_none, test_positive_integer_or_none_2, test_positive_integer_or_none_3, positive_integer_or_none_4, float_range, float_range_2, float_range_3)"
2253,tests/export_tests.py,,,tests/export_tests.py,tests/export_tests.py,tests/export_tests.py,tests/export_tests.py,,,32,"25:assertEqual, 3:assert_equal, 4:assert_raises, ","confirm the total set to defined, compare exported pipeline code as strings, error-handling for duplicate operation, TypeError, compare operators by names, compare long strings of code expected to follow the exported code, check the start string index 0, ",,Export the code,25,"export_random_ind, test_export, generate_pipeline_code, generate_import_code, operators, check_export, export_pipeline, operator_export, test_indent, test_pipeline_score_save, test_imputer_in_export, test_set_param_recursive, "
2254,tests/one_hot_encoder_tests.py,,,tests/one_hot_encoder_tests.py,tests/one_hot_encoder_tests.py,tests/one_hot_encoder_tests.py,tests/one_hot_encoder_tests.py,,,42,"40:assert_array_almost_equal, 2:np.allclose","approximate transformed selected using assert np.allclose, check the transformed sum to defined, approximation for sparse matrix after fit then transform, approximate results with minimum_fraction, the rest are approximation,  ","Assert that automatic selection of categorical features works as expected with a threshold of 10, Test fit_transform a dense matrix, Test fit_transform a dense matrix with minimum_fraction=0.5, Test fit_transform a dense matrix including NaNs, Test fit_transform a dense matrix including NaNs with minimum_fraction=0.5, Test fit_transform a dense matrix including NaNs with specifying categorical_features, Test fit_transform a dense matrix with minimum_fraction as sparse, Test fit_transform a dense matrix including all NaN slice, Test fit_transform a sparse matrix, Test fit_transform a sparse matrix with minimum_fraction=0.5, Test fit_transform a sparse matrix with specifying categorical_features, Test fit_transform a sparse matrix including all zeros slice, Test fit_transform a sparse matrix including all zeros slice with minimum_fraction=0.5, Test fit_transform another sparse matrix including all zeros slice, Test OneHotEncoder with both dense and sparse matrixes, Assert _transform_selected return original X when selected is empty list, Assert _transform_selected return original X when selected is a list of False values, Test OneHotEncoder with categorical_features='auto', Test that OneHotEncoder can refit on two data sets",OneHotEncoder,19,"fit_then_transform, fit_then_transform_dense, auto_detect_categorical, test_dense1, dense1_minimum_fraction, dense2, dense2_minimum_fraction, dense2_with_non_sparse_components, sparse_on_dense2_minimum_fraction, dense3, sparse1, sparse1_minimum_fraction, sparse1_with_non_sparse_components, sparse2, sparse2_minimum_fraction, sparse2_csr, transform, transform_selected, transform_selected_2, k_fold_cv, refit_on_new_data"
2441,tests/stacking_estimator_tests.py,,,tests/stacking_estimator_tests.py,tests/stacking_estimator_tests.py,tests/stacking_estimator_tests.py,tests/stacking_estimator_tests.py,,"interesting/ basically 2 case approach, approximate the performance with true value or approximate with external ml framework implementation like sklearn",8,8:assertnp.allclose,"approximate scores compared to sklearn implementation using assert np.allclose, approximates predict results of transformed with true valid","Assert that the StackingEstimator returns transformed X with synthetic features in classification, Assert that the StackingEstimator returns transformed X with a synthetic feature in regression, Assert that the StackingEstimator worked as expected in scikit-learn pipeline in classification, Assert that the StackingEstimator worked as expected in scikit-learn pipeline in regression",Stacking Estimator,4,"test_StackingEstimator_1, test_StackingEstimator_2, test_StackingEstimator_3, test_StackingEstimator_4"
2443,tests/zero_count_tests.py,,,tests/zero_count_tests.py,tests/zero_count_tests.py,tests/zero_count_tests.py,tests/zero_count_tests.py,,,3,"2:np.allclose, 1:assertEqual","approximate tranformed for zero column and non-zero, compare fit result","Assert that ZeroCount operator returns correct transformed X, Assert that fit() in ZeroCount does nothing",ZeroCount,2,"test_ZeroCount, test_ZeroCount_fit"
2562,tests/test_config.py.bad,,,tests/test_config.py.bad,tests/test_config.py.bad,tests/test_config.py.bad,tests/test_config.py.bad,,,,,,,commented out as removed as bad,,
2716,tests/feature_transformers_tests.py,,,tests/feature_transformers_tests.py,tests/feature_transformers_tests.py,tests/feature_transformers_tests.py,tests/feature_transformers_tests.py,,,10,"7:assert_equal, 3:assert_raises","error-handling/ ValueError for no categorical feature, compare transformed shape with defined","Assert that CategoricalSelector works as expected, Assert that CategoricalSelector works as expected with threshold=5, Assert that CategoricalSelector works as expected with threshold=20, Assert that CategoricalSelector rasies ValueError without categorical features, Assert that fit() in CategoricalSelector does nothing, Assert that ContinuousSelector works as expected, Assert that ContinuousSelector works as expected with threshold=5, Assert that ContinuousSelector works as expected with svd_solver='full', Assert that ContinuousSelector rasies ValueError without categorical features, Assert that fit() in ContinuousSelector does nothing.",Feature Transformation,10,"CategoricalSelector, CategoricalSelector_2, CategoricalSelector_3, CategoricalSelector_4, CategoricalSelector_fit, ContinuousSelector, ContinuousSelector_2, ContinuousSelector_3, ContinuousSelector_4, ContinuousSelector_fit"
2745,tests/test_config_sparse.py,,,tests/test_config_sparse.py,tests/test_config_sparse.py,tests/test_config_sparse.py,tests/test_config_sparse.py,,Not sure!,,,,,Parse config file,,
2812,tests/stats_test.py,,,tests/stats_test.py,tests/stats_test.py,tests/stats_test.py,tests/stats_test.py,,Value-range,,,"Value-range test compare offspring for crossover_count, mutation_count, predecessor all within range, confirm initialization","Asserts that gp_deap.initialize_stats_dict initializes individual statistics correctly, Assert that self._mate_operator updates stats as expected, Asserts that self._random_mutation_operator updates stats as expected, ",Statistical Test,,"dict_initialization, mate_operator_stats_update, mut_operator_stats_update, "
3057,tests/feature_set_selector_tests.py,,,tests/feature_set_selector_tests.py,tests/feature_set_selector_tests.py,tests/feature_set_selector_tests.py,tests/feature_set_selector_tests.py,,,43,"8:array_equal, 2:assert_raises, 15:assertEqual, 6:assertNotEqual, ","Basically testing feature selection across different parameters like correct class, error-handling on ValueError, given array expect to work as expected, etc","Assert that the StackingEstimator returns transformed X based on test feature list 1, Assert that the StackingEstimator returns transformed X based on test feature list 2, Assert that the StackingEstimator returns transformed X based on 2 subsets' names, Assert that the StackingEstimator returns transformed X based on 2 subsets' indexs, Assert that the StackingEstimator returns transformed X seleced based on test feature list 1's index, Assert that the _get_support_mask function returns correct mask, Assert that the StackingEstimator works as expected when input X is np.array, Assert that the StackingEstimator rasies ValueError when features are not available",FeatureSet Selector,9,"FeatureSetSelector_1, FeatureSetSelector_2, FeatureSetSelector_3..9"
3236,tests/test_dask_based.py,,,tests/test_dask_based.py,tests/test_dask_based.py,tests/test_dask_based.py,tests/test_dask_based.py,,interesting,3,assertEqual,compare scores and prediction when dask is used vs none,,"Dask Matches (Distributed ML, scores and prediction for large dataset)",1,test_dask_matches
3712,tests/nn_tests.py,,,,tests/nn_tests.py,tests/nn_tests.py,tests/nn_tests.py,,"No assertion for some cases, trying to understand why else should be a bad practice",3,"3:assert_raises, 1:assertEqual/ not others do not include assert","error-handling for invalid input ValueError, confirm that model works under different params no assertion was used/ manual monitoring, compare config dics, ","Assert that we can instantiate a TPOT classifier with the NN config dict. (NN), Assert that the PytorchLRClassifier model works. (NN), Assert that the PytorchMLPClassifier model works. (NN), Assert that we can set the params of a TPOT-NN estimator. (NN), Assert that TPOT will error if you pass unsupported inputs to an NN estimator. (NN), ",NN test (Neural Network),6,"test_nn_conf_dict, nn_errors_on_multiclass, pytorch_lr_classifier, pytorch_mlp_classifier, nn_estimators_have_settable_params, nn_errors_on_invalid_input_types"
3784,tests/test_log_file.py,,,,tests/test_log_file.py,tests/test_log_file.py,tests/test_log_file.py,,,2,"4:assert_equal, 2:assert_true/ assertGreater","checks like if filesize is grater than 0, if specific character exist in log, ","Set verbosity as 1. Assert log_file parameter to generate log file, Set verbosity as 2. Assert log_file parameter to generate log file, Set verbosity as 3. Assert log_file parameter to generate log file, Assert generation log message is present in log_file",Test Log file,4,"test_log_file_verbosity_1, test_log_file_verbosity_2, test_log_file_verbose_3, check_generations"